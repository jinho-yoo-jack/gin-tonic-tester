// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"mark99/config"
	"mark99/handler"
	"mark99/middlewares"
	"mark99/repository"
	"mark99/routes"
	"mark99/server"
	"mark99/service"
	"mark99/utils"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeServer() (*server.Server, error) {
	configConfig := config.MustLoadConfig()
	db := config.InitDB(configConfig)
	handlerFunc := middlewares.NewAuthorizeMiddleware(configConfig)
	userRepository := repository.NewUserRepository(db)
	jwtUtils := utils.NewJwtUtils(configConfig)
	userService := service.NewUserService(userRepository, jwtUtils)
	userHandler := handler.NewUserHandler(userService)
	v := routes.NewUserRouters(handlerFunc, userHandler)
	v2 := routes.AllRouters(v)
	serverServer, err := server.NewServer(configConfig, db, v2)
	if err != nil {
		return nil, err
	}
	return serverServer, nil
}

// wire.go:

var ConfigSet = wire.NewSet(config.MustLoadConfig, config.InitDB, utils.NewJwtUtils)

var MiddlewareSet = wire.NewSet(middlewares.NewAuthorizeMiddleware)
